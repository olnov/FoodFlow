networks:
  food-flow-network:
    driver: bridge

services:
  caddy:
    image: caddy:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./_data/caddy/data:/data
      - ./_data/caddy/config:/config
    networks:
      - food-flow-network
    restart: unless-stopped

  mongo-service:
    image: mongo:latest
    ports:
      - '27017:27017'
    volumes:
      - ./_data/db:/data/db
    networks:
      - food-flow-network

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    expose:
      - "3013"
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - AUTH_DB_URI=${AUTH_DB_URI}
    depends_on:
      - mongo-service
    command: sh -c "node dist/main.js"
    networks:
      - food-flow-network
    restart: unless-stopped

  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    expose:
      - "3011"
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - INV_DB_URI=${INV_DB_URI}
      - INV_M2M_ID=${INV_M2M_ID}
      - INV_M2M_SECRET=${INV_M2M_SECRET}
      - CATALOG_SERVICE_URL=${CATALOG_SERVICE_URL}
      - INVENTORY_SERVICE_URL=${INVENTORY_SERVICE_URL}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
    depends_on:
      - mongo-service
    command: sh -c "node dist/main.js"
    networks:
      - food-flow-network
    restart: unless-stopped

  product-catalog-service:
    build:
      context: ./product-catalog-service
      dockerfile: Dockerfile
    expose:
      - "3012"
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - CAT_DB_URI=${CAT_DB_URI}
      - CAT_M2M_ID=${CAT_M2M_ID}
      - CAT_M2M_SECRET=${CAT_M2M_SECRET}
      - INVENTORY_SERVICE_URL=${INVENTORY_SERVICE_URL}
      - CATALOG_SERVICE_URL=${CATALOG_SERVICE_URL}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
    depends_on:
      - mongo-service
    command: sh -c "node dist/main.js"
    networks:
      - food-flow-network
    restart: unless-stopped

  web-ui:
    build:
      context: ./web-ui
      dockerfile: Dockerfile
      args:
        BACKEND_URL: "http://localhost"
    expose:
      - "3014"
    environment:
      - NODE_ENV=production
      - BACKEND_URL=${BACKEND_URL}
    command: sh -c "node /app/server/index.mjs"
    networks:
      - food-flow-network
    restart: unless-stopped